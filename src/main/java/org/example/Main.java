package org.example;
import java.util.Scanner;

public class Main {
    private static final Biblioteca biblioteca = new Biblioteca();
    private static final Scanner scanner = new Scanner(System.in);
    private static Usuario usuarioLogado = null;

    public static void main(String[] args) {
        System.out.println("=== SISTEMA DE BIBLIOTECA ===");
        
        // Login inicial
        realizarLogin();
        
        // Menu principal em loop
        int opcao;
        do {
            exibirMenuPrincipal();
            opcao = lerOpcao();
            
            switch (opcao) {
                case 1:
                    cadastrarItem();
                    break;
                case 2:
                    listarItens();
                    break;
                case 3:
                    buscarItem();
                    break;
                case 4:
                    removerItem();
                    break;
                case 5:
                    emprestarLivro();
                    break;
                case 6:
                    trocarUsuario();
                    break;
                case 0:
                    System.out.println("Obrigado por usar o sistema! At√© logo!");
                    break;
                default:
                    System.out.println("‚ö†Ô∏è Op√ß√£o inv√°lida! Tente novamente.");
            }
            
            if (opcao != 0) {
                pausar();
            }
            
        } while (opcao != 0);
        
        scanner.close();
    }

    private static void realizarLogin() {
        System.out.println("\n=== LOGIN NO SISTEMA ===");
        System.out.println("Qual seu tipo de perfil?");
        System.out.println("1 - Administrador");
        System.out.println("2 - Bibliotec√°rio");
        System.out.println("3 - Usu√°rio Comum");
        System.out.print("Escolha sua op√ß√£o: ");
        
        int opcao = lerOpcao();
        
        switch (opcao) {
            case 1:
                System.out.println("√â administrador tempor√°rio? (1-Sim / 2-N√£o): ");
                int tipoAdm = lerOpcao();
                if (tipoAdm == 1) {
                    usuarioLogado = new AdministradorTemporario("Admin Tempor√°rio");
                    System.out.println("‚úÖ Logado como Administrador Tempor√°rio");
                } else {
                    usuarioLogado = new Administrador("Administrador");
                    System.out.println("‚úÖ Logado como Administrador");
                }
                break;
            case 2:
                usuarioLogado = new Bibliotecario("Bibliotec√°rio");
                System.out.println("‚úÖ Logado como Bibliotec√°rio");
                break;
            case 3:
                usuarioLogado = new UsuarioComum("Usu√°rio Comum");
                System.out.println("‚úÖ Logado como Usu√°rio Comum");
                break;
            default:
                System.out.println("‚ö†Ô∏è Op√ß√£o inv√°lida! Definindo como Usu√°rio Comum.");
                usuarioLogado = new UsuarioComum("Usu√°rio Comum");
        }
        
        System.out.println(usuarioLogado.gerarRelatorio());
    }

    private static void exibirMenuPrincipal() {
        System.out.println("\n" + "=".repeat(40));
        System.out.println("           MENU PRINCIPAL");
        System.out.println("=".repeat(40));
        System.out.println("Usu√°rio: " + usuarioLogado.getNome());
        System.out.println("-".repeat(40));
        System.out.println("1  üìö Cadastrar Item");
        System.out.println("2  üìã Listar Todos os Itens");
        System.out.println("3  üîç Buscar Item por T√≠tulo");
        System.out.println("4  üóëÔ∏è  Remover Item");
        System.out.println("5  üìñ Pegar Livro Emprestado");
        System.out.println("6  üë§ Trocar Usu√°rio");
        System.out.println("0  üö™ Sair do Sistema");
        System.out.println("=".repeat(40));
        System.out.print("Escolha uma op√ß√£o: ");
    }

    private static int lerOpcao() {
        try {
            int opcao = scanner.nextInt();
            scanner.nextLine(); // Limpar buffer
            return opcao;
        } catch (Exception e) {
            scanner.nextLine(); // Limpar buffer em caso de erro
            return -1;
        }
    }

    private static void cadastrarItem() {
        System.out.println("\n=== CADASTRAR ITEM ===");
        
        System.out.println("Tipo de item:");
        System.out.println("1 - Livro F√≠sico");
        System.out.println("2 - Livro Digital");
        System.out.println("3 - Revista");
        System.out.print("Escolha o tipo: ");
        
        int tipo = lerOpcao();
        
        System.out.print("T√≠tulo: ");
        String titulo = scanner.nextLine();
        
        System.out.print("Categoria: ");
        String descricaoCategoria = scanner.nextLine();
        Categoria categoria = new Categoria(descricaoCategoria);
        
        try {
            switch (tipo) {
                case 1:
                    cadastrarLivroFisico(titulo, categoria);
                    break;
                case 2:
                    cadastrarLivroDigital(titulo, categoria);
                    break;
                case 3:
                    cadastrarRevista(titulo, categoria);
                    break;
                default:
                    System.out.println("‚ö†Ô∏è Tipo inv√°lido!");
                    return;
            }
            System.out.println("‚úÖ Item cadastrado com sucesso!");
        } catch (Exception e) {
            System.out.println("‚ùå Erro ao cadastrar item: " + e.getMessage());
        }
    }

    private static void emprestarLivro() {
        System.out.println("\n=== PEGAR LIVRO EMPRESTADO ===");;
        System.out.print("Digite o t√≠tulo do livro: ");
        String titulo = scanner.nextLine();
        biblioteca.emprestarItem(titulo, usuarioLogado);
    }

    private static void cadastrarLivroFisico(String titulo, Categoria categoria) {
        System.out.print("Nome do autor: ");
        String nomeAutor = scanner.nextLine();
        Autor autor = new Autor(nomeAutor);
        System.out.print("N√∫mero de p√°ginas: ");
        int paginas = lerOpcao();
        LivroFisico livro = new LivroFisico(titulo, autor, categoria, paginas, usuarioLogado);
        biblioteca.adicionarItem(livro);
    }

    private static void cadastrarLivroDigital(String titulo, Categoria categoria) {
        System.out.print("Nome do autor: ");
        String nomeAutor = scanner.nextLine();
        Autor autor = new Autor(nomeAutor);
        System.out.print("Tamanho do arquivo (MB): ");
        double tamanho = scanner.nextDouble();
        scanner.nextLine();
        LivroDigital livro = new LivroDigital(titulo, autor, categoria, tamanho, usuarioLogado);
        biblioteca.adicionarItem(livro);
    }

    private static void cadastrarRevista(String titulo, Categoria categoria) {
        System.out.print("N√∫mero da edi√ß√£o: ");
        int edicao = lerOpcao();
        
        Revista revista = new Revista(titulo, categoria, edicao);
        biblioteca.adicionarItem(revista);
    }

    private static void listarItens() {
        System.out.println("\n=== TODOS OS ITENS ===");
        biblioteca.listarItens();
    }

    private static void buscarItem() {
        System.out.println("\n=== BUSCAR ITEM ===");
        System.out.print("Digite o t√≠tulo do item: ");
        String titulo = scanner.nextLine();
        biblioteca.buscarPorTitulo(titulo);
    }

    private static void removerItem() {
        System.out.println("\n=== REMOVER ITEM ===");
        System.out.print("Digite o t√≠tulo do item para remover: ");
        String titulo = scanner.nextLine();
        biblioteca.removerItem(titulo);
    }

    private static void trocarUsuario() {
        System.out.println("\n=== TROCAR USU√ÅRIO ===");
        realizarLogin();
    }

    private static void pausar() {
        System.out.println("\nPressione ENTER para continuar...");
        scanner.nextLine();
    }
}
